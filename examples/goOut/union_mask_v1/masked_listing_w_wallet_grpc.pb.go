// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package union_mask_v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MaskedListingWWalletServiceClient is the client API for MaskedListingWWalletService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MaskedListingWWalletServiceClient interface {
	InvokeMaskedListingWWallet(ctx context.Context, in *MaskedListingWWalletRequest, opts ...grpc.CallOption) (*MaskedListingWWalletResponse, error)
}

type maskedListingWWalletServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMaskedListingWWalletServiceClient(cc grpc.ClientConnInterface) MaskedListingWWalletServiceClient {
	return &maskedListingWWalletServiceClient{cc}
}

func (c *maskedListingWWalletServiceClient) InvokeMaskedListingWWallet(ctx context.Context, in *MaskedListingWWalletRequest, opts ...grpc.CallOption) (*MaskedListingWWalletResponse, error) {
	out := new(MaskedListingWWalletResponse)
	err := c.cc.Invoke(ctx, "/union_mask_v1.MaskedListingWWalletService/InvokeMaskedListingWWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MaskedListingWWalletServiceServer is the server API for MaskedListingWWalletService service.
// All implementations must embed UnimplementedMaskedListingWWalletServiceServer
// for forward compatibility
type MaskedListingWWalletServiceServer interface {
	InvokeMaskedListingWWallet(context.Context, *MaskedListingWWalletRequest) (*MaskedListingWWalletResponse, error)
	mustEmbedUnimplementedMaskedListingWWalletServiceServer()
}

// UnimplementedMaskedListingWWalletServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMaskedListingWWalletServiceServer struct {
}

func (UnimplementedMaskedListingWWalletServiceServer) InvokeMaskedListingWWallet(context.Context, *MaskedListingWWalletRequest) (*MaskedListingWWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeMaskedListingWWallet not implemented")
}
func (UnimplementedMaskedListingWWalletServiceServer) mustEmbedUnimplementedMaskedListingWWalletServiceServer() {
}

// UnsafeMaskedListingWWalletServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MaskedListingWWalletServiceServer will
// result in compilation errors.
type UnsafeMaskedListingWWalletServiceServer interface {
	mustEmbedUnimplementedMaskedListingWWalletServiceServer()
}

func RegisterMaskedListingWWalletServiceServer(s grpc.ServiceRegistrar, srv MaskedListingWWalletServiceServer) {
	s.RegisterService(&MaskedListingWWalletService_ServiceDesc, srv)
}

func _MaskedListingWWalletService_InvokeMaskedListingWWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MaskedListingWWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MaskedListingWWalletServiceServer).InvokeMaskedListingWWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/union_mask_v1.MaskedListingWWalletService/InvokeMaskedListingWWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MaskedListingWWalletServiceServer).InvokeMaskedListingWWallet(ctx, req.(*MaskedListingWWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MaskedListingWWalletService_ServiceDesc is the grpc.ServiceDesc for MaskedListingWWalletService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MaskedListingWWalletService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "union_mask_v1.MaskedListingWWalletService",
	HandlerType: (*MaskedListingWWalletServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InvokeMaskedListingWWallet",
			Handler:    _MaskedListingWWalletService_InvokeMaskedListingWWallet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "union_mask_v1/masked_listing_w_wallet.proto",
}
